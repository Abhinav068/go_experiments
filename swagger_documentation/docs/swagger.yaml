basePath: /api/v1
definitions:
  main.AdminResponse:
    description: Admin user account information for API responses
    properties:
      access_level:
        example: Super Admin
        type: string
      department:
        example: IT
        type: string
      email:
        example: admin@example.com
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Admin User
        type: string
      user_type:
        allOf:
        - $ref: '#/definitions/main.UserType'
        example: admin
    type: object
  main.BaseUser:
    description: Base user account information
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      user_type:
        $ref: '#/definitions/main.UserType'
    type: object
  main.CreateUserRequest:
    description: Request body for creating a new user
    properties:
      access_level:
        description: Only for admins
        type: string
      department:
        description: Only for admins
        type: string
      email:
        type: string
      loyalty_tier:
        description: Only for customers
        type: string
      name:
        type: string
      password:
        type: string
      user_type:
        $ref: '#/definitions/main.UserType'
    type: object
  main.CustomerResponse:
    description: Customer user account information for API responses
    properties:
      email:
        type: string
      id:
        type: integer
      loyalty_tier:
        type: string
      name:
        type: string
      user_type:
        $ref: '#/definitions/main.UserType'
    type: object
  main.UserType:
    description: Type of user account
    enum:
    - customer
    - admin
    type: string
    x-enum-varnames:
    - CustomerType
    - AdminType
host: localhost:8080
info:
  contact: {}
  description: Request body for creating a new user
  title: User API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get all users from the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.BaseUser'
            type: array
      summary: Get a list of all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the provided information
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: When user type is admin
          schema:
            $ref: '#/definitions/main.AdminResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: When user type is admin
          schema:
            $ref: '#/definitions/main.AdminResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user's information
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: When user type is admin
          schema:
            $ref: '#/definitions/main.AdminResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
      tags:
      - users
swagger: "2.0"
