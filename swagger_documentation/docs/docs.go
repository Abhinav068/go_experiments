// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/users": {
            "get": {
                "description": "Get all users from the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a list of all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.BaseUser"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "When user type is admin",
                        "schema": {
                            "$ref": "#/definitions/main.AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When user type is admin",
                        "schema": {
                            "$ref": "#/definitions/main.AdminResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User object",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "When user type is admin",
                        "schema": {
                            "$ref": "#/definitions/main.AdminResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.AdminResponse": {
            "description": "Admin user account information for API responses",
            "type": "object",
            "properties": {
                "access_level": {
                    "type": "string",
                    "example": "Super Admin"
                },
                "department": {
                    "type": "string",
                    "example": "IT"
                },
                "email": {
                    "type": "string",
                    "example": "admin@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Admin User"
                },
                "user_type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/main.UserType"
                        }
                    ],
                    "example": "admin"
                }
            }
        },
        "main.BaseUser": {
            "description": "Base user account information",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_type": {
                    "$ref": "#/definitions/main.UserType"
                }
            }
        },
        "main.CreateUserRequest": {
            "description": "Request body for creating a new user",
            "type": "object",
            "properties": {
                "access_level": {
                    "description": "Only for admins",
                    "type": "string"
                },
                "department": {
                    "description": "Only for admins",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "loyalty_tier": {
                    "description": "Only for customers",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_type": {
                    "$ref": "#/definitions/main.UserType"
                }
            }
        },
        "main.CustomerResponse": {
            "description": "Customer user account information for API responses",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "loyalty_tier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "user_type": {
                    "$ref": "#/definitions/main.UserType"
                }
            }
        },
        "main.UserType": {
            "description": "Type of user account",
            "type": "string",
            "enum": [
                "customer",
                "admin"
            ],
            "x-enum-varnames": [
                "CustomerType",
                "AdminType"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "User API",
	Description:      "Request body for creating a new user",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
